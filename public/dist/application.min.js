"use strict";var ApplicationConfiguration=function(){var applicationModuleName="gochannelv10",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","blockUI","underscore","angucomplete"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),angular.module(ApplicationConfiguration.applicationModuleName).controller("Ctrl",["$rootScope","Authentication",function($rootScope,Authentication){$rootScope.user=Authentication.user,$rootScope.pagewraper=null!==$rootScope.user}]),ApplicationConfiguration.registerModule("billers"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("countries"),ApplicationConfiguration.registerModule("employees"),ApplicationConfiguration.registerModule("members"),ApplicationConfiguration.registerModule("notifications"),ApplicationConfiguration.registerModule("partners"),ApplicationConfiguration.registerModule("reports"),ApplicationConfiguration.registerModule("services"),ApplicationConfiguration.registerModule("system"),ApplicationConfiguration.registerModule("transactions"),ApplicationConfiguration.registerModule("users"),angular.module("billers").config(["$stateProvider",function($stateProvider){$stateProvider.state("listBillers",{url:"/billers",templateUrl:"modules/billers/views/list-billers.client.view.html"}).state("createBiller",{url:"/billers/create",templateUrl:"modules/billers/views/create-biller.client.view.html"}).state("viewBiller",{url:"/billers/:billerId",templateUrl:"modules/billers/views/view-biller.client.view.html"}).state("editBiller",{url:"/billers/:billerId/edit",templateUrl:"modules/billers/views/edit-biller.client.view.html"})}]),angular.module("billers").factory("Billers",["$resource",function($resource){return $resource("billers/:billerId",{billerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$rootScope","Authentication","Menus","$location","$timeout",function($scope,$rootScope,Authentication,Menus,$location,$timeout){$rootScope.user=Authentication.user,$rootScope.user||$location.path("/signin"),$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$rootScope.user&&$timeout(function(){$rootScope.$broadcast("dataloaded")},100),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$stateParams","$location","$timeout","$resource","Authentication","Transactions","Localization","blockUI",function($scope,$stateParams,$location,$timeout,$resource,Authentication,Transactions,Localization,blockUI){$scope.authentication=Authentication,$scope.local=Localization,$scope.lang=Localization.lang,$scope.statuses=[{value:"Active",label:Localization.StatusApproved[Localization.lang]},{value:"Pending",label:Localization.StatusPending[Localization.lang]},{value:"Rejected",label:Localization.StatusRejected[Localization.lang]}],$scope.findTopUps=function(){$scope.statusFilter_topup=new StatusFilter("TOPUP","Pending")},$scope.findRemittances=function(){$scope.StatusFilter_remittance=new StatusFilter("REMITTANCE","Active")},$scope.findPayBills=function(){$scope.StatusFilter_bills_payment=new StatusFilter("BILLS PAYMENT","Active")},$scope.findLoans=function(){$scope.StatusFilter_loan_payment=new StatusFilter("LOAN PAYMENT","Pending")},$scope.transactions={};var StatusFilter=function(transaction_type){var populate=function(){Transactions.query({sort:"date_created",by:!1,limit:5,transaction_type:transaction_type},function(transactions){$scope.transactions[transaction_type]=transactions,$timeout(function(){blockUI.stop()},1)})};populate()};$scope.pagewraper=!0}]),angular.module("core").directive("formTransclude",function(){return{restrict:"E",scope:!1,transclude:!0,replace:!0,template:'<div><h1>Transcluded form</h1><div ng-transclude class="form-transclude"></div></div>'}}),angular.module("core").directive("lastAction",["$resource","Employees",function($resource,Employees){return{restrict:"A",link:function(scope,element,attrs){Employees.get({employeeId:scope.authentication.user._id},function(employee){var action=attrs.title;void 0===employee.last_action&&(employee.last_action=[]);for(var i in employee.last_action)employee.last_action[i].Title===action&&employee.last_action.splice(i,1);5===employee.last_action.length&&employee.last_action.splice(0,1),employee.last_action.push({Title:action,Url:attrs.url}),employee.$update({employeeId:scope.authentication.user._id},function(){scope.authentication.user=employee})})}}}]),angular.module("core").directive("ngConfirmClick",[function(){return{priority:-1,restrict:"A",link:function(scope,element,attrs){element.bind("click",function(e){var message=attrs.ngConfirmClick;message&&!confirm(message)&&(e.stopImmediatePropagation(),e.preventDefault())})}}}]),angular.module("core").directive("shouldRender",["Localization",function(Localization){return{restrict:"A",link:function(scope,element,attrs){var found=!1;for(var userRoleIndex in scope.user.role)parseInt(attrs.shouldRender)===parseInt(scope.user.role[userRoleIndex].priv_id)&&(found=!0,console.log(attrs.showTitleIn),window.jQuery(element).find(attrs.showTitleIn).html(scope.user.role[userRoleIndex][Localization.lang]));found?"true"===attrs.showIt&&element.remove():"true"!==attrs.showIt&&element.remove()}}}]),angular.module("core").directive("showErrors",function(){return{restrict:"A",require:"^form",link:function(scope,el,attrs,formCtrl){var inputEl=el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=inputNgEl.attr("name");inputNgEl.bind("blur",function(){el.toggleClass("has-error",formCtrl[inputName].$invalid)}),scope.$watch("modal_is_submitted",function(){"boolean"==typeof scope.modal_is_submitted&&el.toggleClass("has-error",formCtrl[inputName].$invalid)})}}}),angular.module("core").directive("sideMenu",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element){scope.$on("dataloaded",function(){$timeout(function(){element.metisMenu()},100)})}}}]),angular.module("core").factory("Localization",[function(){return{lang:"en_us",menuMembersManagement:{en_us:"Members Management",ch_hk:"Members Management"},menuMembers:{en_us:"Members",ch_hk:"Members"},menuAddMember:{en_us:"Add Member",ch_hk:"Add Member"},menuBeneficiaryApplication:{en_us:"Beneficiary Application",ch_hk:"Beneficiary Application"},menuBillersApplication:{en_us:"Billers Application",ch_hk:"Billers Application"},menuEmployeeManagement:{en_us:"Employee Management",ch_hk:"Employee Management"},menuEmployees:{en_us:"Employees",ch_hk:"Employees"},menuAddEmployee:{en_us:"Add Employee",ch_hk:"Add Employee"},menuPartnersManagement:{en_us:"Partners Management",ch_hk:"Partners Management"},menuPartners:{en_us:"Partners",ch_hk:"Partners"},menuAddPartner:{en_us:"Add Partner",ch_hk:"Add Partner"},menuReports:{en_us:"Reports",ch_hk:"Reports"},menuTransactions:{en_us:"Transactions",ch_hk:"Transactions"},menuMicrofinanceLoans:{en_us:"Loan Payments",ch_hk:"Loan Payments"},menuRemittances:{en_us:"Remittances",ch_hk:"Remittances"},menuBills:{en_us:"Bill Payments",ch_hk:"Bill Payments"},menuTopUps:{en_us:"Top Ups",ch_hk:"Top Ups"},menuCardTopUps:{en_us:"Card Top Ups",ch_hk:"Card Top Ups"},menuAdvanceSearch:{en_us:"Advance Search",ch_hk:"Advance Search"},menuSystem:{en_us:"System",ch_hk:"System"},menuAuditTrails:{en_us:"Audit Trails",ch_hk:"Audit Trails"},menuKYCManagement:{en_us:"KYC Management",ch_hk:"KYC Management"},FirstName:{en_us:"First Name",ch_hk:"First Name"},LastName:{en_us:"Last Name",ch_hk:"Last Name"},MiddleName:{en_us:"Middle Name",ch_hk:"Middle Name"},NameOnCard:{en_us:"Name on card",ch_hk:"Name on card"},Title:{en_us:"Title",ch_hk:"Title"},Mr:{en_us:"Mr.",ch_hk:"Mr."},Ms:{en_us:"Ms.",ch_hk:"Ms."},Mrs:{en_us:"Mrs.",ch_hk:"Mrs."},Dr:{en_us:"Dr.",ch_hk:"Dr."},Engr:{en_us:"Engr.",ch_hk:"Engr."},Dir:{en_us:"Dir.",ch_hk:"Dir."},CivilStatus:{en_us:"Civil status",ch_hk:"Civil status"},Single:{en_us:"Single",ch_hk:"Single"},Married:{en_us:"Married",ch_hk:"Married"},Divorced:{en_us:"Divorced",ch_hk:"Divorced"},Separated:{en_us:"Separated",ch_hk:"Separated"},Widowed:{en_us:"Widowed",ch_hk:"Widowed"},Gender:{en_us:"Gender",ch_hk:"Gender"},Male:{en_us:"Male",ch_hk:"Male"},Female:{en_us:"Female",ch_hk:"Female"},Birthday:{en_us:"Birthday",ch_hk:"Birthday"},Birthplace:{en_us:"Birthplace",ch_hk:"Birthplace"},Citizenship:{en_us:"Citizenship",ch_hk:"Citizenship"},Email:{en_us:"Email",ch_hk:"Email"},Address1:{en_us:"Address Line 1",ch_hk:"Address Line 1"},Address2:{en_us:"Address Line 2",ch_hk:"Address Line 2"},City:{en_us:"City",ch_hk:"City"},Country:{en_us:"Country",ch_hk:"Country"},isMailingAddress:{en_us:"Is Mailing address?",ch_hk:"Is Mailing address?"},CompanyName:{en_us:"Company Name",ch_hk:"Company Name"},WorkTitle:{en_us:"Work Title",ch_hk:"Work Title"},NameOfSupervisor:{en_us:"Name Of Supervisor",ch_hk:"Name Of Supervisor"},CompanyAddressLine1:{en_us:"Company address line 1",ch_hk:"Company address line 1"},CompanyAddressLine2:{en_us:"Company address line 2",ch_hk:"Company address line 2"},CompanyZipCode:{en_us:"Company postal code",ch_hk:"Company postal code"},OfficePhoneNumber:{en_us:"Office phone number",ch_hk:"Office phone number"},EstimatedAnnualSalary:{en_us:"Estimated annual salary",ch_hk:"Estimated annual salary"},YearEmployed:{en_us:"Year employed",ch_hk:"Year employed"},YearsWorked:{en_us:"Year worked",ch_hk:"Year worked"},MothersFirstName:{en_us:"Mother's first name",ch_hk:"Mother's first name"},MothersMaidenSurname:{en_us:"Mother's maiden surname",ch_hk:"Mother's maiden surname"},FathersSurname:{en_us:"Father's surname",ch_hk:"Father's surname"},FathersFirstName:{en_us:"Father's first name",ch_hk:"Father's first name"},MotherBirthday:{en_us:"Mother's birthday",ch_hk:"Mother's birthday"},SSSIDNumber:{en_us:"SSS ID number",ch_hk:"SSS ID number"},SSSIDIssuanceDate:{en_us:"SSS ID Issuance date",ch_hk:"SSS ID Issuance date"},DriversLicenseID:{en_us:"Driver's License ID",ch_hk:"Driver's License ID"},DriversLicenseIssuanceDate:{en_us:"Driver's License Issuance date",ch_hk:"Driver's License Issuance date"},DriversLicenseExpiryDate:{en_us:"Driver's License expiry date",ch_hk:"Driver's License expiry date"},PassportID:{en_us:"Passport ID",ch_hk:"Passport ID"},PassportIssuanceDate:{en_us:"Passport Issuance Date",ch_hk:"Passport Issuance Date"},PassportExpiryDate:{en_us:"Passport Expiry Date",ch_hk:"Passport Expiry Date"},ZipCode:{en_us:"Zip Code",ch_hk:"Zip Code"},ProvincialCode:{en_us:"Provincial Code",ch_hk:"Provincial Code"},ContactNumber:{en_us:"Contact Number",ch_hk:"Contact Number"},EmployeeType:{en_us:"Employee Type",ch_hk:"Employee Type"},Status:{en_us:"Account activation status",ch_hk:"Account activation status"},MemberSince:{en_us:"Member Since",ch_hk:"Member Since"},Action:{en_us:"Action",ch_hk:"Action"},PartnerName:{en_us:"Partner Name",ch_hk:"Partner Name"},PartnerType:{en_us:"Partner Type",ch_hk:"Partner Type"},PayoutMethod:{en_us:"Payout Method",ch_hk:"Payout Method"},PayoutMethodName:{en_us:"Payout Method Name",ch_hk:"Payout Method Name"},PartnerFee:{en_us:"Partner Fee",ch_hk:"Partner Fee"},GoChannelFee:{en_us:"Go Channel Fee",ch_hk:"Go Channel Fee"},BillPayment:{en_us:"Bills Payment",ch_hk:"Bills Payment"},AddedFees:{en_us:"Added Fees",ch_hk:"Added Fees"},Phone:{en_us:"Phone number (landline)",ch_hk:"Phone number (landline)"},Fax:{en_us:"Fax",ch_hk:"Fax"},Mobile:{en_us:"Mobile phone number",ch_hk:"Mobile phone number"},Notes:{en_us:"Notes",ch_hk:"Notes"},Remittances:{en_us:"Remittances",ch_hk:"Remittances"},NoDataAvailable:{en_us:"No data available.",ch_hk:"No data available."},BillPayments:{en_us:"Bill Payments",ch_hk:"Bill Payments"},Remittance:{en_us:"Remittance and Bills Payments",ch_hk:"Remittance and Bills Payments"},RemittanceOnly:{en_us:"Remittance Only",ch_hk:"Remittance Only"},MicroFinance:{en_us:"Microfinance",ch_hk:"Microfinance"},AddMember:{en_us:"Add Member",ch_hk:"Add Member"},EditMember:{en_us:"Edit Member",ch_hk:"Edit Member"},MemberDetails:{en_us:"Member Details",ch_hk:"Member Details"},BeneficiaryDetails:{en_us:"Beneficiary Details",ch_hk:"Beneficiary Details"},Profile:{en_us:"Profile",ch_hk:"Profile"},AddressInfo:{en_us:"Address Info",ch_hk:"Address Info"},WorkInfo:{en_us:"Work Info",ch_hk:"Work Info"},References:{en_us:"References",ch_hk:"References"},GoChannelAccount:{en_us:"GoChannel Account",ch_hk:"GoChannel Account"},Beneficiary:{en_us:"Beneficiary",ch_hk:"Beneficiary"},Biller:{en_us:"Biller",ch_hk:"Biller"},MicroFinnancingServiceProvider:{en_us:"Micro Finance Service Partner",ch_hk:"Micro Finance Service Partner"},RemittanceServiceProvider:{en_us:"Remittance Service Partner",ch_hk:"Remittance Service Partner"},CardIssuer:{en_us:"Card Issuer",ch_hk:"Card Issuer"},CardNbr:{en_us:"Card Number",ch_hk:"Card Number"},DateJoined:{en_us:"Date joined",ch_hk:"Date joined"},AddBeneficiary:{en_us:"Add Beneficiary",ch_hk:"Add Beneficiary"},Name:{en_us:"Name",ch_hk:"Name"},StatusActive:{en_us:"Active",ch_hk:"Active"},StatusInActive:{en_us:"Inactive",ch_hk:"Inactive"},Billers:{en_us:"Billers",ch_hk:"Billers"},BillerName:{en_us:"Biller Name",ch_hk:"Biller Name"},AccountName:{en_us:"Account Name",ch_hk:"Account Name"},AccountNumber:{en_us:"Account Number",ch_hk:"Account Number"},CreatedOn:{en_us:"Created On",ch_hk:"Created On"},ApplicantsName:{en_us:"Applicants Name",ch_hk:"Applicants Name"},BeneficiaryName:{en_us:"Beneficiary Name",ch_hk:"Beneficiary Name"},StatusApproved:{en_us:"Approved",ch_hk:"Approved"},StatusRejected:{en_us:"Rejected",ch_hk:"Rejected"},StatusApprove:{en_us:"Approve",ch_hk:"Approve"},StatusReject:{en_us:"Reject",ch_hk:"Reject"},StatusPending:{en_us:"Pending",ch_hk:"Pending"},StatusCleared:{en_us:"Cleared",ch_hk:"Cleared"},StatusClear:{en_us:"Clear",ch_hk:"Clear"},AccountManagement:{en_us:"Account Management",ch_hk:"Account Management"},DateCreated:{en_us:"Date Created",ch_hk:"Date Created"},ReferenceCode:{en_us:"Reference Code",ch_hk:"Reference Code"},MemberName:{en_us:"Member Name",ch_hk:"Member Name"},AmountPaid:{en_us:"Amount",ch_hk:"Amount"},DateModified:{en_us:"Date Modified",ch_hk:"Date Modified"},SenderName:{en_us:"Sender Name",ch_hk:"Sender Name"},RecipientName:{en_us:"Recipient Name",ch_hk:"Recipient Name"},Amount:{en_us:"Amount",ch_hk:"Amount"},LoanManagement:{en_us:"Loan",ch_hk:"Loan"},ReferenceNumber:{en_us:"Reference No.",ch_hk:"Reference No."},OriginalValue:{en_us:"Original Value",ch_hk:"Original Value"},RatePerPeriod:{en_us:"Rate Per Period",ch_hk:"Rate Per Period"},NumberOfPeriods:{en_us:"Number of periods",ch_hk:"Number of periods"},CurrentPeriod:{en_us:"Current Period",ch_hk:"Current Period"},PresentValue:{en_us:"Present Value",ch_hk:"Present Value"},DateDuration:{en_us:"Date Duration",ch_hk:"Date Duration"},isMember:{en_us:"Is Member",ch_hk:"Is Member"},BankName:{en_us:"Bank",ch_hk:"Bank"},EWalletAccountNumber:{en_us:"EWallet Account Number",ch_hk:"EWallet Account Number"},LatestTransactions:{en_us:"Latest Transactions",ch_hk:"Latest Transactions"},TransactionDetails:{en_us:"Transaction Details",ch_hk:"Transaction Details"},PaymentType:{en_us:"Payment Type",ch_hk:"Payment Type"},TransactionDate:{en_us:"Transaction Date",ch_hk:"Transaction Date"},DepositDate:{en_us:"Deposit Date",ch_hk:"Deposit Date"},SlipNo:{en_us:"Slip Reference No",ch_hk:"Slip Reference No"},DepositSlip:{en_us:"Deposit Slip",ch_hk:"Deposit Slip"},TransactionListStatus:{en_us:"Status",ch_hk:"Status"},BatchNumber:{en_us:"Batch Number",ch_hk:"Batch Number"},BatchStatus:{en_us:"Batch Status",ch_hk:"Batch Status"},BatchDetails:{en_us:"Batch Details",ch_hk:"Batch Details"}}}]),angular.module("core").service("Menus",[function(){this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.role)if(parseInt(this.roles)===parseInt(user.role[userRoleIndex].priv_id))return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,menuIcon,menuOrder,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles,items:[],shouldRender:shouldRender,menuIcon:menuIcon,menuOrder:menuOrder}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("MyModules",["$resource",function($resource){return $resource("modules/:moduleId",{moduleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("countries").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCountries",{url:"/countries",templateUrl:"modules/countries/views/list-countries.client.view.html"}).state("createCountry",{url:"/countries/create",templateUrl:"modules/countries/views/create-country.client.view.html"}).state("viewCountry",{url:"/countries/:countryId",templateUrl:"modules/countries/views/view-country.client.view.html"}).state("editCountry",{url:"/countries/:countryId/edit",templateUrl:"modules/countries/views/edit-country.client.view.html"})}]),angular.module("countries").controller("CountriesController",["$scope","$stateParams","$location","Authentication","Countries",function($scope,$stateParams,$location,Authentication,Countries){$scope.authentication=Authentication,$scope.create=function(){var country=new Countries({name:this.name});country.$save(function(response){$location.path("countries/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(country){if(country){country.$remove();for(var i in $scope.countries)$scope.countries[i]===country&&$scope.countries.splice(i,1)}else $scope.country.$remove(function(){$location.path("countries")})},$scope.update=function(){var country=$scope.country;country.$update(function(){$location.path("countries/"+country._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.countries=Countries.query()},$scope.findOne=function(){$scope.country=Countries.get({countryId:$stateParams.countryId})}}]),angular.module("countries").factory("Countries",["$resource",function($resource){return $resource("countries/:countryId",{countryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("employees").run(["Menus","Localization",function(Menus,Localization){var local=Localization,lang=local.lang;Menus.addMenuItem("topbar",local.menuEmployeeManagement[lang],"employees","dropdown","/employees(/create)?(/types)?","male",4,!1,3),Menus.addSubMenuItem("topbar","employees",local.menuEmployees[lang],"employees",void 0,!1,18),Menus.addSubMenuItem("topbar","employees",local.menuAddEmployee[lang],"employees/create",void 0,!1,20),Menus.addSubMenuItem("topbar","employees","List Employee Types","employees/types/listing",void 0,!1,29),Menus.addSubMenuItem("topbar","employees","Create Employee Types","employees/types/create",void 0,!1,30)}]),angular.module("employees").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEmployees",{url:"/employees",templateUrl:"modules/employees/views/list-employees.client.view.html"}).state("createEmployee",{url:"/employees/create",templateUrl:"modules/employees/views/create-employee.client.view.html"}).state("viewEmployee",{url:"/employees/:employeeId",templateUrl:"modules/employees/views/list-employees.client.view.html"}).state("editEmployee",{url:"/employees/:employeeId/edit",templateUrl:"modules/employees/views/edit-employee.client.view.html"}).state("listEmployeetypes",{url:"/employees/types/listing",templateUrl:"modules/employees/views/list-employeetypes.client.view.html"}).state("createEmployeetype",{url:"/employees/types/create",templateUrl:"modules/employees/views/create-employeetype.client.view.html"}).state("viewEmployeeType",{url:"/employees/types/listing/:employeeId",templateUrl:"modules/employees/views/list-employeetypes.client.view.html"}).state("editEmployeetype",{url:"/employees/types/:employeetypeId/edit",templateUrl:"modules/employees/views/edit-employeetype.client.view.html"})}]),angular.module("employees").controller("EmployeesController",["$scope","$http","$stateParams","$location","$resource","$timeout","Authentication","Employees","Localization","Countries","MyModules","Employeetypes","blockUI","_",function($scope,$http,$stateParams,$location,$resource,$timeout,Authentication,Employees,Localization,Countries,MyModules,Employeetypes,blockUI,_){$scope.authentication=Authentication,$scope.local=Localization,$scope.lang=Localization.lang,$scope.create=function(){$scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.employee.$save(function(response){$location.path("employees/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.init=function(){$scope.countries=Countries.query(),$scope.employee=new Employees({role:[]});var modules=MyModules.query(),employeetypes=Employeetypes.query();$scope.modules=modules,$scope.employeetypes=employeetypes},$scope.remove=function(employee){if(employee){employee.$remove();for(var i in $scope.employees)$scope.employees[i]===employee&&$scope.employees.splice(i,1)}else $scope.employee.$remove(function(){$location.path("employees")})},$scope.update=function(){if($scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.frmEmployee.$valid){var employee=$scope.employee;employee.$update(function(){$location.path("employees/"+employee._id)},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.find=function(){var Counter=$resource("/employees/count",{},{query:{method:"GET",isArray:!1}});$scope.populate=function(){Employees.query({page:$scope.currentPage,sort:$scope.sort,by:$scope.by,status:$scope.status},function(employees){$scope.employees=employees})},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})};var checkChange=function(){try{if(void 0!==$scope.employee.role){var privileges,employee_types=JSON.parse(JSON.stringify($scope.employeetypes));for(var i in employee_types)employee_types[i]._id===$scope.employee.employee_type&&(privileges=employee_types[i].privileges);$scope.isChanged=null===$scope.employee.employee_type||_.difference(privileges,$scope.employee.role).length>0}else $scope.isChanged=!1;$scope.employee.employee_type=$scope.isChanged?null:$scope.employee.employee_type}catch(e){}};$scope.findOne=function(){Employees.get({employeeId:$stateParams.employeeId},function(employee){$scope.employee=employee,MyModules.query({},function(modules){$scope.modules=modules,$scope.initValue()})});var employeetypes=Employeetypes.query();$scope.employeetypes=employeetypes,$scope.countries=Countries.query(),$scope.isChanged=!1},$scope.initValue=function(update){var roles,initializeModule=function(_module_){$scope.employee.role=roles,console.log(roles),angular.forEach(roles,function(privilege){angular.forEach(_module_,function(module){privilege===module._id&&(module.checked=!0,initializeModule(module.privileges))})})};update?($scope.isChange=!1,$scope.modules=[],blockUI.start(),$timeout(function(){MyModules.query({},function(modules){$scope.modules=modules;var employee_types=JSON.parse(JSON.stringify($scope.employeetypes));for(var i in employee_types)employee_types[i]._id===$scope.employee.employee_type&&(roles=employee_types[i].privileges);initializeModule($scope.modules),blockUI.stop()})},100)):(roles=$scope.employee.role,initializeModule($scope.modules))},$scope.updateEmployee=function(item){console.log("1");var found=!1;for(var i in $scope.employee.role)$scope.employee.role[i]===item._id&&(found=!0,item.checked||$scope.employee.role.splice(i,1));!found&&item.checked&&$scope.employee.role.push(item._id),item.privileges&&angular.forEach(item.privileges,function(i){i.checked=item.checked,$scope.updateEmployee(i)}),checkChange()},$scope.generate_password=function(){$http.post("/employees/reset_password/"+$scope.employee._id).success(function(){}).error(function(response){$scope.error=response.message})}}]),angular.module("employees").controller("EmployeetypesController",["$scope","$stateParams","$location","$resource","Authentication","Employeetypes","MyModules","Localization","_",function($scope,$stateParams,$location,$resource,Authentication,Employeetypes,MyModules,Localization){$scope.lang=Localization.lang,$scope.local=Localization,$scope.authentication=Authentication,$scope.create=function(){$scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.employeetype.$save(function(response){$location.path("employees/types/listing/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.init=function(){$scope.employeetype=new Employeetypes({name:"",privileges:[]}),MyModules.query({},function(modules){$scope.modules=modules})},$scope.remove=function(employeetype){if(employeetype){employeetype.$remove();for(var i in $scope.employeetypes)$scope.employeetypes[i]===employeetype&&$scope.employeetypes.splice(i,1)}else $scope.employeetype.$remove(function(){$location.path("employeetypes")})},$scope.update=function(){if($scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.frmEmployeeType.$valid){var employeetype=$scope.employeetype;employeetype.$update(function(){$location.path("employees/types/listing/"+employeetype._id)},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.find=function(){var Counter=$resource("/employeetypes/count",{},{query:{method:"GET",isArray:!1}});$scope.populate=function(){Employeetypes.query({page:$scope.currentPage,sort:$scope.sort,by:$scope.by,status:$scope.status},function(employeetypes){$scope.employeetypes=employeetypes})},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})},$scope.findOne=function(){Employeetypes.get({employeetypeId:$stateParams.employeetypeId},function(employeetype){$scope.employeetype=employeetype,MyModules.query({},function(modules){$scope.modules=modules,$scope.initValue()})})},$scope.initValue=function(){var initializeModule=function(_module_){var roles=$scope.employeetype.privileges;$scope.employeetype.privilege=roles,angular.forEach(roles,function(privilege){angular.forEach(_module_,function(module){privilege===module._id&&(module.checked=!0,initializeModule(module.privileges))})})};initializeModule($scope.modules)},$scope.updateEmployee=function(item){var found=!1;for(var i in $scope.employeetype.privileges)$scope.employeetype.privileges[i]===item._id&&(found=!0,item.checked||$scope.employeetype.privileges.splice(i,1));!found&&item.checked&&$scope.employeetype.privileges.push(item._id),item.privileges&&angular.forEach(item.privileges,function(i){i.checked=item.checked,$scope.updateEmployee(i)})}}]),angular.module("employees").factory("Employees",["$resource",function($resource){return $resource("employees/:employeeId",{employeeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("employees").factory("Employeetypes",["$resource",function($resource){return $resource("employeetypes/:employeetypeId",{employeetypeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("members").run(["Menus","Localization",function(Menus,Localization){var local=Localization,lang=local.lang;Menus.addMenuItem("topbar",local.menuMembersManagement[lang],"members","dropdown","/members(/create)?","users",1,!1,2),Menus.addSubMenuItem("topbar","members",local.menuMembers[lang],"members",void 0,!1,10),Menus.addSubMenuItem("topbar","members",local.menuAddMember[lang],"members/create",void 0,!1,12),Menus.addSubMenuItem("topbar","members",local.menuBeneficiaryApplication[lang],"members/beneficiary-applications",void 0,!1,14),Menus.addSubMenuItem("topbar","members",local.menuBillersApplication[lang],"members/billers-applications",void 0,!1,16)}]),angular.module("members").config(["$stateProvider",function($stateProvider){$stateProvider.state("billers-applications",{url:"/members/billers-applications",templateUrl:"modules/members/views/billers-applications.client.view.html"}).state("edit-beneficiary",{url:"/edit-beneficiary/:memberId/edit",templateUrl:"modules/members/views/edit-beneficiary.client.view.html"}).state("beneficiary-applications",{url:"/members/beneficiary-applications",templateUrl:"modules/members/views/beneficiary-applications.client.view.html"}).state("listMembers",{url:"/members",templateUrl:"modules/members/views/list-members.client.view.html"}).state("createMember",{url:"/members/create",templateUrl:"modules/members/views/create-member.client.view.html"}).state("viewMember",{url:"/members/:memberId",templateUrl:"modules/members/views/list-members.client.view.html"}).state("editMember",{url:"/members/:memberId/edit",templateUrl:"modules/members/views/edit-member.client.view.html"})}]),angular.module("members").controller("BeneficiaryApplicationsController",["$scope","$rootScope","$location","$stateParams","$resource","$modal","Localization","Beneficiaries","Countries","Authentication",function($scope,$rootScope,$location,$stateParams,$resource,$modal,Localization,Beneficiaries,Countries,Authentication){$rootScope.local=Localization,$rootScope.lang=$scope.local.lang,$scope.authentication=Authentication,$scope.list=function(){$scope.statuses=[{value:Localization.StatusApproved.en_us,label:Localization.StatusApproved[Localization.lang]},{value:Localization.StatusPending.en_us,label:Localization.StatusPending[Localization.lang]},{value:Localization.StatusRejected.en_us,label:Localization.StatusRejected[Localization.lang]}],$scope.status=Localization.StatusPending.en_us;
var Counter=$resource("/beneficiaries/count",{status:$scope.status},{query:{method:"GET",isArray:!1}});$scope.populate=function(){Beneficiaries.query({page:$scope.currentPage,sort:$scope.sort,by:$scope.by,status:$scope.status},function(members){console.log(members),$scope.beneficiaries=members})},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})},$scope.statusFilter=function(){$scope.beneficiaries=Beneficiaries.query({status:$scope.status})},$scope.findOne=function(){$scope.countries=Countries.query(),$scope.beneficiary=Beneficiaries.get({beneficiaryId:$stateParams.memberId})},$scope.update=function(beneficiary,status){beneficiary?(beneficiary.status=status,beneficiary.$update(function(){$scope.statusFilter()},function(errorResponse){$scope.error=errorResponse.data.message})):$scope.beneficiary.$update(function(){$location.path("members/beneficiary-applications")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(beneficiary){if(beneficiary){beneficiary.$remove();for(var i in $scope.beneficiaries)$scope.beneficiaries[i]===beneficiary&&$scope.beneficiaries.splice(i,1)}else $scope.beneficiaries.$remove(function(){$location.path("members/beneficiary-applications")})};var ModalCtrl=function($scope,$modalInstance,data){$scope.local=Localization,$scope.lang=Localization.lang,$scope.data=data,$scope.ok=function(){$modalInstance.close()}};$scope.open_member=function(member){var modalInstance=$modal.open({templateUrl:"MemberDetails",controller:ModalCtrl,resolve:{data:function(){return member}}});modalInstance.result.then(function(){},function(){})},$scope.open_beneficiary=function(beneficiary){var modalInstance=$modal.open({templateUrl:"BeneficiaryDetails",controller:ModalCtrl,resolve:{data:function(){return beneficiary}}});modalInstance.result.then(function(){},function(){})}}]),angular.module("members").controller("BillersApplicationController",["$scope","$stateParams","$location","$resource","$modal","Authentication","Memberbiller","Localization",function($scope,$stateParams,$location,$resource,$modal,Authentication,Memberbiller,Localization){$scope.local=Localization,$scope.lang=$scope.local.lang,$scope.authentication=Authentication,$scope.remove=function(biller){if(biller){biller.$remove();for(var i in $scope.billers)$scope.billers[i]===biller&&$scope.billers.splice(i,1)}else $scope.biller.$remove(function(){$location.path("billers")})},$scope.update=function(biller,status){biller?(biller.status=status,biller.$update(function(){$scope.statusFilter()},function(errorResponse){$scope.error=errorResponse.data.message})):$scope.biller.$update(function(){$location.path("members/billers-applications")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.statusFilter=function(){$scope.billers=Memberbiller.query({status:$scope.status})},$scope.find=function(){$scope.statuses=[{value:Localization.StatusApproved.en_us,label:Localization.StatusApproved[Localization.lang]},{value:Localization.StatusPending.en_us,label:Localization.StatusPending[Localization.lang]},{value:Localization.StatusRejected.en_us,label:Localization.StatusRejected[Localization.lang]}],$scope.status=Localization.StatusPending.en_us;var Counter=$resource("/memberbiller/count",{status:$scope.status},{query:{method:"GET",isArray:!1}});$scope.populate=function(){Memberbiller.query({page:$scope.currentPage,sort:$scope.sort,by:$scope.by,status:$scope.status},function(billers){$scope.billers=billers})},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})},$scope.findOne=function(){$scope.biller=Memberbiller.get({memberbillerId:$stateParams.memberId})};var ModalCtrl=function($scope,$modalInstance,data){$scope.local=Localization,$scope.lang=Localization.lang,$scope.data=data,$scope.ok=function(){$modalInstance.close()}};$scope.open_member=function(member){var modalInstance=$modal.open({templateUrl:"MemberDetails",controller:ModalCtrl,resolve:{data:function(){return member}}});modalInstance.result.then(function(){},function(){})}}]),angular.module("members").controller("MembersController",["$scope","$rootScope","$stateParams","$location","Authentication","Members","Localization","Countries","Partners","Beneficiaries","Employees","Billers","$modal","$timeout","$http","$resource",function($scope,$rootScope,$stateParams,$location,Authentication,Members,Localization,Countries,Partners,Beneficiaries,Employees,Billers,$modal,$timeout,$http,$resource){$rootScope.local=Localization,$rootScope.lang=$scope.local.lang,$scope.authentication=Authentication,$scope.active=1;var ModalInstanceCtrl=function($scope,$modalInstance,data){$scope.countries=Countries.query(),$scope.data=data,$scope.banks=[{name:"BDO"},{name:"BPI"}],$scope.ok=function(){$scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.frmBeneficiary.$valid&&$modalInstance.close($scope.data)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.changeCountry=function(countryid){console.log(countryid),angular.forEach($scope.countries,function(country){country._id===countryid&&($scope.data.country=country)})}};$scope.create=function(){$scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.member.$save(function(response){$location.path("members/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message,errorResponse.data.member&&(alert(errorResponse.data.message.general),$location.url("members/"+errorResponse.data.member._id+"/edit"))})},$scope.init=function(){$scope.member=new Members({beneficiaries_link:[],biller_link:[],loans_link:[]}),$scope.countries=Countries.query(),$scope.microfinancing_partners=Partners.query({partner_type:$scope.local.MicroFinance.en_us}),$scope.remittance_partners=Partners.query({partner_type:$scope.local.Remittance.en_us})},$scope.remove=function(member){if(member){member.$remove();for(var i in $scope.members)$scope.members[i]===member&&$scope.members.splice(i,1)}else $scope.member.$remove(function(){$location.path("members")})},$scope.removeBen=function(beneficiary){if(beneficiary)for(var i in $scope.member.beneficiaries_link)$scope.member.beneficiaries_link[i]===beneficiary&&$scope.member.beneficiaries_link.splice(i,1)},$scope.removeBil=function(biller){if(biller)for(var i in $scope.member.biller_link)$scope.member.biller_link[i]===biller&&$scope.member.biller_link.splice(i,1)},$scope.removeLoan=function(loan){if(loan)for(var i in $scope.member.loans_link)$scope.member.loans_link[i]===loan&&$scope.member.loans_link.splice(i,1)},$scope.update=function(){if($scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.frmMember.$valid){var member=$scope.member;member.$update(function(){$location.path("members/"+member._id)},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.find=function(){var Counter=$resource("/members/count",{},{query:{method:"GET",isArray:!1}});$scope.populate=function(){Members.query({page:$scope.currentPage,sort:$scope.sort,by:$scope.by},function(members){$scope.members=members})},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})},$scope.findOne=function(){$scope.member=Members.get({memberId:$stateParams.memberId}),$scope.countries=Countries.query(),$scope.remittance_partners=Partners.query({partner_type:$scope.local.Remittance.en_us}),$scope.microfinancing_partners=Partners.query({partner_type:$scope.local.MicroFinance.en_us})},$scope.open=function(beneficiary){var modalInstance=$modal.open({templateUrl:"beneficiary_form",controller:ModalInstanceCtrl,resolve:{data:function(){return beneficiary}}});modalInstance.result.then(function(data){var found=!1;angular.forEach($scope.member.beneficiaries_link,function(beneficiary){beneficiary===data&&(found=!0)}),found||$scope.member.beneficiaries_link.push(data)},function(){})},$scope.open_loan=function(loan){var modalInstance=$modal.open({templateUrl:"loanForm",controller:ModalInstanceCtrl,resolve:{data:function(){return loan}}});modalInstance.result.then(function(data){$scope.member.loans_link||($scope.member.loans_link=[]);var found=!1;angular.forEach($scope.member.loans_link,function(loan){loan===data&&(found=!0)}),found||$scope.member.loans_link.push(data)},function(){})};var ModalBillerCtrl=function($scope,$modalInstance,data,member){$scope.partner=Partners.get({partnerId:member.remittance}),console.log($scope.partner),$scope.data=data,$scope.ok=function(){$scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.frmBiller.$valid&&$modalInstance.close($scope.data)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.selectBiller=function(billerid){angular.forEach($scope.partner.biller_link,function(biller){biller._id===billerid&&($scope.data.biller=biller)})}};$scope.open_biller=function(biller){console.log($scope.member);var modalInstance=$modal.open({templateUrl:"billerForm",controller:ModalBillerCtrl,resolve:{data:function(){return biller},member:function(){return $scope.member}}});modalInstance.result.then(function(data){var found=!1;angular.forEach($scope.member.biller_link,function(biller){biller===data&&(found=!0)}),found||$scope.member.biller_link.push(data)},function(){})},$scope.generate_password=function(){$http.post("/members/reset_password/"+$scope.member._id).success(function(){alert("Password has been reset")}).error(function(response){$scope.error=response.message})}}]),angular.module("members").factory("Beneficiaries",["$resource",function($resource){return $resource("beneficiaries/:beneficiaryId",{beneficiaryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("members").factory("Memberbiller",["$resource",function($resource){return $resource("memberbiller/:memberbillerId",{memberbillerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("members").factory("Members",["$resource",function($resource){return $resource("members/:memberId",{memberId:"@_id"},{update:{method:"PUT"}})}]),angular.module("notifications").config(["$stateProvider",function($stateProvider){$stateProvider.state("listNotifications",{url:"/notifications",templateUrl:"modules/notifications/views/list-notifications.client.view.html"}).state("createNotification",{url:"/notifications/create",templateUrl:"modules/notifications/views/create-notification.client.view.html"}).state("viewNotification",{url:"/notifications/:notificationId",templateUrl:"modules/notifications/views/view-notification.client.view.html"}).state("editNotification",{url:"/notifications/:notificationId/edit",templateUrl:"modules/notifications/views/edit-notification.client.view.html"})}]),angular.module("notifications").controller("NotificationsController",["$scope","$stateParams","$location","Authentication","Notifications",function($scope,$stateParams,$location,Authentication,Notifications){$scope.authentication=Authentication,$scope.create=function(){var notification=new Notifications({name:this.name});notification.$save(function(response){$location.path("notifications/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(notification){if(notification){notification.$remove();for(var i in $scope.notifications)$scope.notifications[i]===notification&&$scope.notifications.splice(i,1)}else $scope.notification.$remove(function(){$location.path("notifications")})},$scope.update=function(){var notification=$scope.notification;notification.$update(function(){$location.path("notifications/"+notification._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.notifications=Notifications.query()},$scope.findOne=function(){$scope.notification=Notifications.get({notificationId:$stateParams.notificationId})}}]),angular.module("notifications").factory("Notifications",["$resource",function($resource){return $resource("notifications/:notificationId",{notificationId:"@_id"},{update:{method:"PUT"}})}]),angular.module("partners").run(["Menus","Localization",function(Menus,Localization){var local=Localization,lang=local.lang;Menus.addMenuItem("topbar",local.menuPartnersManagement[lang],"partners","dropdown","/partners(/create)?","bank",2,!1,1),Menus.addSubMenuItem("topbar","partners",local.menuPartners[lang],"partners",void 0,!1,7),Menus.addSubMenuItem("topbar","partners",local.menuAddPartner[lang],"partners/create",void 0,!1,8)}]),angular.module("partners").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPartners",{url:"/partners",templateUrl:"modules/partners/views/list-partners.client.view.html"}).state("createPartner",{url:"/partners/create",templateUrl:"modules/partners/views/create-partner.client.view.html"}).state("viewPartner",{url:"/partners/:partnerId",templateUrl:"modules/partners/views/list-partners.client.view.html"}).state("editPartner",{url:"/partners/:partnerId/edit",templateUrl:"modules/partners/views/edit-partner.client.view.html"})}]),angular.module("partners").controller("PartnersController",["$scope","$rootScope","$stateParams","$location","$resource","Authentication","Partners","Localization","Countries","$modal",function($scope,$rootScope,$stateParams,$location,$resource,Authentication,Partners,Localization,Countries,$modal){$rootScope.local=Localization,$rootScope.lang=$scope.local.lang,$scope.authentication=Authentication;var ModalInstanceCtrl=function($scope,$modalInstance,data){$scope.data=data,$scope.ok=function(){$modalInstance.close($scope.data)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}};$scope.create=function(){$scope.modal_is_submitted=!$scope.Modal_is_submitted,$scope.partner.$save(function(response){$location.path("partners/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.init=function(){$scope.countries=Countries.query(),$scope.partner=new Partners({payout_method:[],biller_link:[]})},$scope.remove=function(partner){if(partner){partner.$remove();for(var i in $scope.partners)$scope.partners[i]===partner&&$scope.partners.splice(i,1)}else $scope.partner.$remove(function(){$location.path("partners")})},$scope.removePayoutMethod=function(method){if(method)for(var i in $scope.partner.payout_method)$scope.partner.payout_method[i]===method&&$scope.partner.payout_method.splice(i,1)},$scope.update=function(){if($scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.frmPartner.$valid){var partner=$scope.partner;partner.$update(function(){$location.path("partners/"+partner._id)},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.find=function(){var Counter=$resource("/partners/count",{},{query:{method:"GET",isArray:!1}});$scope.populate=function(){Partners.query({page:$scope.currentPage,sort:$scope.sort,by:$scope.by,status:$scope.status},function(partners){$scope.partners=partners})},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})},$scope.findOne=function(){$scope.countries=Countries.query(),$scope.partner=Partners.get({partnerId:$stateParams.partnerId})},$scope.open=function(method){var modalInstance=$modal.open({templateUrl:"payoutMethodForm",controller:ModalInstanceCtrl,resolve:{data:function(){return method}}});modalInstance.result.then(function(data){var found=!1;angular.forEach($scope.partner.payout_method,function(method){method===data&&(found=!0)}),found||$scope.partner.payout_method.push(data)},function(){})},$scope.openBillerForm=function(biller){var modalInstance=$modal.open({templateUrl:"billerForm",controller:ModalInstanceCtrl,resolve:{data:function(){return biller}}});modalInstance.result.then(function(data){if(void 0===data._id){var found=!1;angular.forEach($scope.partner.biller_link,function(biller){biller===data&&(found=!0)}),found||$scope.partner.biller_link.push(data)}},function(){})},$scope.removeBiller=function(biller){for(var i in $scope.partner.biller_link)$scope.partner.biller_link[i]===biller&&$scope.partner.biller_link.splice(i,1)},$scope.changeCountry=function(countryid){console.log(countryid),angular.forEach($scope.countries,function(country){country._id===countryid&&($scope.partner.country=country)})}}]),angular.module("partners").factory("Partners",["$resource",function($resource){return $resource("partners/:partnerId",{partnerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("reports").run(["Menus","Localization",function(Menus,Localization){var local=Localization,lang=local.lang;Menus.addMenuItem("topbar",local.menuReports[lang],"reports","dropdown","/reports(/create)?","folder-open",5)}]),angular.module("reports").controller("ReportsController",["$scope",function(){}]),angular.module("services").config(["$stateProvider",function($stateProvider){$stateProvider.state("listServices",{url:"/services",templateUrl:"modules/services/views/list-services.client.view.html"}).state("createService",{url:"/services/create",templateUrl:"modules/services/views/create-service.client.view.html"}).state("viewService",{url:"/services/:serviceId",templateUrl:"modules/services/views/view-service.client.view.html"}).state("editService",{url:"/services/:serviceId/edit",templateUrl:"modules/services/views/edit-service.client.view.html"})}]),angular.module("services").controller("ServicesController",["$scope","$stateParams","$location","Authentication","Services",function($scope,$stateParams,$location,Authentication,Services){$scope.authentication=Authentication,$scope.create=function(){var service=new Services({name:this.name});service.$save(function(response){$location.path("services/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(service){if(service){service.$remove();for(var i in $scope.services)$scope.services[i]===service&&$scope.services.splice(i,1)}else $scope.service.$remove(function(){$location.path("services")})},$scope.update=function(){var service=$scope.service;service.$update(function(){$location.path("services/"+service._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.services=Services.query()},$scope.findOne=function(){$scope.service=Services.get({serviceId:$stateParams.serviceId})}}]),angular.module("services").factory("Services",["$resource",function($resource){return $resource("services/:serviceId",{serviceId:"@_id"},{update:{method:"PUT"}})}]),angular.module("system").run(["Menus","Localization",function(Menus,Localization){var local=Localization,lang=local.lang;Menus.addMenuItem("topbar",local.menuSystem[lang],"system","dropdown","/system(/create)?(/types)?","male",4,!1,31),Menus.addSubMenuItem("topbar","system",local.menuAuditTrails[lang],"system",void 0,!1,32),Menus.addSubMenuItem("topbar","system",local.menuKYCManagement[lang],"kyc-management",void 0,!1,40)}]),angular.module("system").config(["$stateProvider",function($stateProvider){$stateProvider.state("kyc-management",{url:"/kyc-management",templateUrl:"modules/system/views/kyc-management.client.view.html"}).state("system",{url:"/system",templateUrl:"modules/system/views/system.client.view.html"})}]),angular.module("system").controller("KycManagementController",["$scope","$rootScope","$resource","$http","$modal","Members","Authentication","Localization","KycSending",function($scope,$rootScope,$resource,$http,$modal,Members,Authentication,Localization,KycSending){$rootScope.local=Localization,$rootScope.lang=$scope.local.lang,$scope.authentication=Authentication,$rootScope.reloadAll=!1,$scope.find=function(status){var count_resource;count_resource="Sent"===status?"/kyc-sending/count":"/members/count";var Counter=$resource(count_resource,{KYCStatus:status},{query:{method:"GET",isArray:!1}});$scope.populate=function(){var Model="Sent"===status?KycSending:Members;Model.query({KYCStatus:status,page:$scope.currentPage,sort:$scope.sort,by:$scope.by},function(results){$scope.results=results,angular.forEach($scope.results,function(result){$scope.checkboxes[result._id]=!1}),$rootScope.reloadAll=!1})},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})},$rootScope.$watch("reloadAll",function(value){value&&$scope.populate()}),$scope.checkboxes={},$scope.checkAll=function(){angular.forEach($scope.checkboxes,function(checkbox,value){$scope.checkboxes[value]=$scope.checkall})},$scope.isCheckedAll=function(){var found=!0;angular.forEach($scope.checkboxes,function(checkbox){checkbox||(found=!1)});var ret=$scope.checkall=found;return ret},$scope.sendBatch=function(){$http.post("/members/sendbatch/",$scope.checkboxes).success(function(response){alert("ok"===response.result?"KYC has been sent.":"Theres an error in member. KYC Not sent"),$rootScope.reloadAll=!0}).error(function(response){$scope.error=response.message})},$scope.resendBatch=function(){$http.post("/members/resendbatch/",$scope.checkboxes).success(function(response){alert("ok"===response.result?"KYC has been sent.":"Theres an error in member. KYC Not sent"),$rootScope.reloadAll=!0}).error(function(response){$scope.error=response.message})},$scope.setOnHold=function(){$http.post("/members/onhold/",$scope.checkboxes).success(function(response){alert("ok"===response.result?"KYC has been hold.":"Theres an error in member. KYC Not hold"),$rootScope.reloadAll=!0}).error(function(response){$scope.error=response.message})},$scope.openBatchDetails=function(batch){var modalInstance=$modal.open({templateUrl:"BatchDetails",controller:ModalCtrl,resolve:{data:function(){return batch}}});modalInstance.result.then(function(){},function(){})};var ModalCtrl=function($scope,$modalInstance,data){$scope.data=data,$scope.ok=function(){$modalInstance.close($scope.data)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}}]),angular.module("system").controller("SystemController",["$scope","$resource","AuditTrails","Localization",function($scope,$resource,AuditTrails,Localization){$scope.local=Localization,$scope.lang=Localization.lang,$scope.find=function(){var Counter=$resource("/audittrails/count",{},{query:{method:"GET",isArray:!1}});$scope.populate=function(){AuditTrails.query({page:$scope.currentPage,sort:$scope.sort,by:$scope.by,status:$scope.status},function(audittrails){$scope.audittrails=audittrails})},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})}}]),angular.module("system").factory("AuditTrails",["$resource",function($resource){return $resource("audittrails/:audittrailsId",{audittrailsId:"@_id"},{update:{method:"PUT"}})}]),angular.module("system").factory("KycSending",["$resource",function($resource){return $resource("kyc-sending/:kycsendingId",{audittrailsId:"@_id"},{update:{method:"PUT"}})}]),angular.module("transactions").run(["Menus","Localization",function(Menus,Localization){var local=Localization,lang=local.lang;Menus.addMenuItem("topbar",local.menuTransactions[lang],"transactions","dropdown","/transactions(/create)?","exchange",3,!1,5),Menus.addSubMenuItem("topbar","transactions",local.menuMicrofinanceLoans[lang],"transactions/list-loanpayments",void 0,!1,40),Menus.addSubMenuItem("topbar","transactions",local.menuRemittances[lang],"transactions/list-remittances",void 0,!1,27),Menus.addSubMenuItem("topbar","transactions",local.menuBills[lang],"transactions/list-billpayments",void 0,!1,26),Menus.addSubMenuItem("topbar","transactions",local.menuTopUps[lang],"transactions/list-topups",void 0,!1,24),Menus.addSubMenuItem("topbar","transactions",local.menuCardTopUps[lang],"transactions/card-topups",void 0,!1,33)}]),angular.module("transactions").config(["$stateProvider",function($stateProvider){$stateProvider.state("card-topups",{url:"/transactions/card-topups",templateUrl:"modules/transactions/views/card-topups.client.view.html"}).state("list-remittances",{url:"/transactions/list-remittances",templateUrl:"modules/transactions/views/list-remittances.client.view.html"}).state("list-topups",{url:"/transactions/list-topups",templateUrl:"modules/transactions/views/list-topups.client.view.html"}).state("list-loanpayments",{url:"/transactions/list-loanpayments",templateUrl:"modules/transactions/views/list-loanpayments.client.view.html"}).state("list-billpayments",{url:"/transactions/list-billpayments",templateUrl:"modules/transactions/views/list-billpayments.client.view.html"})}]),angular.module("transactions").controller("TransactionsController",["$scope","$rootScope","$stateParams","$location","$timeout","$resource","$modal","$http","Authentication","Transactions","Members","Localization","Partners","blockUI",function($scope,$rootScope,$stateParams,$location,$timeout,$resource,$modal,$http,Authentication,Transactions,Members,Localization,Partners,blockUI){$scope.authentication=Authentication,$scope.local=Localization,$scope.lang=Localization.lang,$rootScope.parseFloat=function(value){return parseFloat(value)-parseFloat(value)!==0&&(value=0),console.log(value),parseFloat(value)},$scope.statuses=[{value:Localization.StatusApproved[Localization.lang],label:Localization.StatusApproved[Localization.lang]},{value:Localization.StatusPending[Localization.lang],label:Localization.StatusPending[Localization.lang]},{value:Localization.StatusRejected[Localization.lang],label:Localization.StatusRejected[Localization.lang]}],$scope.microfinancing_partners=Partners.query({partner_type:$scope.local.MicroFinance.en_us}),$scope.remittance_partners=Partners.query({partner_type:$scope.local.Remittance.en_us}),$scope.findTopUps=function(){$scope.transaction_type="TOPUP",$scope.status=Localization.StatusPending.en_us,$scope.statusFilter()},$scope.findCardTopUps=function(){$scope.transaction_type="CARD-TOPUP",$scope.status=Localization.StatusPending.en_us,$scope.statusFilter()},$scope.showTopUPFORM=function(){var modalInstance=$modal.open({templateUrl:"TopUP",controller:TopUpCtrl,resolve:{data:function(){return{}}}});modalInstance.result.then(function(data){console.log(data),$http.post("/transactions/cardtopup",data).success(function(){$scope.findCardTopUps()}).error(function(response){$scope.error=response.message})},function(){})},$scope.checkboxes={},$scope.checkAll=function(){angular.forEach($scope.checkboxes,function(checkbox,value){$scope.checkboxes[value]=$scope.checkall})},$scope.isCheckedAll=function(){var found=!0;angular.forEach($scope.checkboxes,function(checkbox){checkbox||(found=!1)});var ret=$scope.checkall=found;return ret},$scope.approve=function(){angular.forEach($scope.transactions,function(transaction){$scope.checkboxes[transaction._id]===!0&&"Pending"===String(transaction.status)&&$scope.update(transaction,Localization.StatusApproved.en_us)})},$scope.decline=function(){angular.forEach($scope.transactions,function(transaction){$scope.checkboxes[transaction._id]===!0&&"Pending"===String(transaction.status)&&$scope.update(transaction,Localization.StatusRejected.en_us)})},$scope.findRemittances=function(){$scope.transaction_type="REMITTANCE",$scope.status=Localization.StatusPending.en_us,$scope.statusFilter()},$scope.findPayBills=function(){$scope.transaction_type="BILLS PAYMENT",$scope.status=Localization.StatusPending.en_us,$scope.statusFilter()},$scope.findLoans=function(){$scope.transaction_type="LOAN PAYMENT",$scope.status=Localization.StatusPending.en_us,$scope.statusFilter()},$scope.statusFilter=function(){var Counter=$resource("/transactions/count",{transaction_type:$scope.transaction_type,status:$scope.status,partner_name:$scope.partner_name},{query:{method:"GET",isArray:!1}});$scope.populate=function(){var member=$scope.selectedPerson?$scope.selectedPerson.originalObject._id:null;Transactions.query({wildcard_search:$scope.wildcard_search,page:$scope.currentPage,sort:$scope.sort,by:$scope.by,transaction_type:$scope.transaction_type,status:$scope.status,partner:$scope.partner,member:member,transaction_date_from:$scope.transaction_date_from,transaction_date_to:$scope.transaction_date_to},function(transactions){$scope.transactions=transactions,angular.forEach($scope.transactions,function(transaction){$scope.checkboxes[transaction._id]=!1})}),$timeout(function(){blockUI.stop()},0)},$scope.sortBy=function(field){$scope.sort!==field?($scope.by=!0,$scope.sort=field):$scope.by=!$scope.by,$scope.populate()},$scope.pageLimit=10,$scope.currentPage=1,Counter.query(function(count){$scope.totalItems=count.total,$scope.populate()})},$scope.create=function(){var transaction=new Transactions({name:this.name});transaction.$save(function(response){$location.path("transactions/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(transaction){if(transaction){transaction.$remove();for(var i in $scope.transactions)$scope.transactions[i]===transaction&&$scope.transactions.splice(i,1)}else $scope.transaction.$remove(function(){$location.path("transactions")})},$scope.update=function(transaction,status){transaction&&(transaction.status=status,transaction.$update(function(){$scope.statusFilter()},function(errorResponse){$scope.error=errorResponse.data.message}))},$scope.find=function(){$scope.transactions=Transactions.query()},$scope.findOne=function(){$scope.transaction=Transactions.get({transactionId:$stateParams.transactionId})},$scope.members=Members.query();var TopUpCtrl=function($scope,$modalInstance,data){$scope.local=Localization,$scope.lang=Localization.lang,$scope.member={},$scope.populateCardNbr=function(member){console.log(member),$scope.data.CardNbr=member.CardNbr,$scope.data.member=member._id},$scope.members=Members.query({hasCardNumber:!0}),$scope.data=data,$scope.ok=function(){$scope.modal_is_submitted=!$scope.modal_is_submitted,$scope.frmTopup.$valid&&$modalInstance.close($scope.data)}},ModalTransCtrl=function($scope,$modalInstance,data){$scope.local=Localization,$scope.lang=Localization.lang,$scope.data=data,$scope.ok=function(){$modalInstance.close()}};$scope.open_transaction=function(transaction){var modalInstance=$modal.open({templateUrl:"TransactionDetails",controller:ModalTransCtrl,resolve:{data:function(){return transaction}}});modalInstance.result.then(function(){},function(){})}}]),angular.module("transactions").factory("Transactions",["$resource",function($resource){return $resource("transactions/:transactionId",{transactionId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})
}]),angular.module("users").controller("AuthenticationController",["$scope","$rootScope","$http","$location","Authentication",function($scope,$rootScope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/"),$rootScope.user=response,$rootScope.$broadcast("dataloaded"),$rootScope.pagewraper=!0}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","$resource","Users","Authentication",function($scope,$http,$location,$resource,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.put("/users/password/"+Authentication.user._id,$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersController",["$scope","$stateParams","$location","Authentication","Users",function($scope,$stateParams,$location,Authentication,Users){$scope.authentication=Authentication,$scope.create=function(){var user=new Users({name:this.name});user.$save(function(response){$location.path("users/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(user){if(user){user.$remove();for(var i in $scope.users)$scope.users[i]===user&&$scope.users.splice(i,1)}else $scope.user.$remove(function(){$location.path("users")})},$scope.update=function(){var user=$scope.user;user.$update(function(){$location.path("users/"+user._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.users=Users.query()},$scope.findOne=function(){$scope.user=Users.get({userId:$stateParams.userId})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);